// <auto-generated />
using FinalyBookstore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinalyBookstore.Migrations
{
    [DbContext(typeof(BookstoreDbContex))]
    [Migration("20240223154559_addInformation")]
    partial class addInformation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinalyBookstore.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Author");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LastName = "Nikolayevich",
                            Name = "Lev",
                            SurName = "Tolstoy"
                        },
                        new
                        {
                            Id = 2,
                            LastName = "Afanasievich",
                            Name = "Mikhail",
                            SurName = "Bulgakov"
                        },
                        new
                        {
                            Id = 3,
                            LastName = "Katherine",
                            Name = "Joan",
                            SurName = "Rowling"
                        });
                });

            modelBuilder.Entity("FinalyBookstore.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<bool>("Heir")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Pages")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PublisherId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("GenreId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            CostPrice = 200m,
                            GenreId = 1,
                            Heir = true,
                            Name = "war and peace",
                            Pages = 1225,
                            Price = 500m,
                            PublisherId = 1,
                            Year = 1867
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            CostPrice = 180m,
                            GenreId = 2,
                            Heir = false,
                            Name = "The Master and Margarita",
                            Pages = 384,
                            Price = 280m,
                            PublisherId = 2,
                            Year = 1967
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            CostPrice = 120m,
                            GenreId = 3,
                            Heir = false,
                            Name = "Harry Potter and the Philosopher's Stone",
                            Pages = 320,
                            Price = 200m,
                            PublisherId = 3,
                            Year = 1997
                        });
                });

            modelBuilder.Entity("FinalyBookstore.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genre");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "historical novel"
                        },
                        new
                        {
                            Id = 2,
                            Name = "fantasy novel"
                        },
                        new
                        {
                            Id = 3,
                            Name = "fantasy"
                        });
                });

            modelBuilder.Entity("FinalyBookstore.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Publisher");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Russian Herald"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Moscow"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Bloomsbury"
                        });
                });

            modelBuilder.Entity("FinalyBookstore.Book", b =>
                {
                    b.HasOne("FinalyBookstore.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalyBookstore.Genre", "Genre")
                        .WithMany("Books")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalyBookstore.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Genre");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("FinalyBookstore.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("FinalyBookstore.Genre", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("FinalyBookstore.Publisher", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
